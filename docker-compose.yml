version: "3.3"

volumes:
  prometheus: {}
  grafana: {}
  alertmanager: {}

configs:
  node_rules:
    file: ./prometheus/rules/swarm_node.rules.yml
  task_rules:
    file: ./prometheus/rules/swarm_task.rules.yml

services:

  cadvisor:
    image: google/cadvisor:v.0.31.0
    networks:
    - prometheus
    command: -docker_only
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  grafana:
    image: {{.Grafana}}
    networks:
    - prometheus
    environment:
    - GF_SECURITY_ADMIN_USER={{if .User}}{{.User}}{{else}}admin{{end}}
    - GF_SECURITY_ADMIN_PASSWORD={{if .Password}}{{.Password}}{{else}}admin{{end}}
    - GF_USERS_ALLOW_SIGN_UP=false
    - GF_PATHS_PROVISIONING=/etc/grafana/provisioning/
    - GF_SERVER_ROOT_URL={{if .Domain}}{{.Domain}}{{else}}localhost{{end}}/grafana
    #- GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}
    #- GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS:-grafana@test.com}
    #- GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME:-Grafana}
    #- GF_SMTP_HOST=${GF_SMTP_HOST:-smtp:25}
    #- GF_SMTP_USER=${GF_SMTP_USER}
    #- GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
    volumes:
    - grafana:/var/lib/grafana
    - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources/
    - ./grafana/swarmprom_dashboards.yml:/etc/grafana/provisioning/dashboards/
    - ./grafana/provisioning/dashboards:/etc/grafana/dashboards/
    deploy:
      mode: replicated
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=PathPrefixStrip:/grafana
      - traefik.port=3000
      - traefik.docker.network=prometheus
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  alertmanager:
    image: {{.AlertManager}}
    networks:
    - prometheus
    environment:
    - SLACK_URL=${SLACK_URL:-https://hooks.slack.com/services/TOKEN}
    - SLACK_CHANNEL=${SLACK_CHANNEL:-general}
    - SLACK_USER=${SLACK_USER:-alertmanager}
    command:
    - '--config.file=/etc/alertmanager/alertmanager.yml'
    - '--storage.path=/alertmanager'
    volumes:
    - alertmanager:/alertmanager
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  node-exporter:
    image: {{.NodeExporter}}
    networks:
    - prometheus
    environment:
    - NODE_ID={{.Node.ID}}
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
    - /etc/hostname:/etc/nodename
    command:
    - '--path.sysfs=/host/sys'
    - '--path.procfs=/host/proc'
    - '--collector.textfile.directory=/etc/node-exporter/'
    - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    # no collectors are explicitely enabled here, because the defaults are just fine,
    # see https://github.com/prometheus/node_exporter
    # disable ipvs collector because it barfs the node-exporter logs full with errors on my centos 7 vm's
    - '--no-collector.ipvs'
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  prometheus:
    image: {{.Prometheus}}
    networks:
    - prometheus
    command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--web.console.libraries=/etc/prometheus/console_libraries'
    - '--web.console.templates=/etc/prometheus/consoles'
    - '--storage.tsdb.path=/prometheus'
    - '--storage.tsdb.retention=24h'
    - '--web.external-url=http{{if .SSLEnabled}}s{{end}}://{{if .Domain}}{{.Domain}}{{else}}localhost{{end}}/prometheus'
    volumes:
    - ./prometheus/:/etc/prometheus/
    - prometheus:/prometheus
    configs:
    - source: node_rules
      target: /etc/prometheus/swarm_node.rules.yml
    - source: task_rules
      target: /etc/prometheus/swarm_task.rules.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=PathPrefixStrip:/prometheus
      - traefik.port=9090
      - traefik.docker.network=prometheus
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M

networks:
  prometheus:
    external: true