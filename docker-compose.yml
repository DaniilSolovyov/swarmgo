version: "3.3"

volumes:
  prometheus: {}
  grafana: {}
  alertmanager: {}

configs:
  node_rules:
    file: ./prometheus/rules/swarm_node.rules.yml
  task_rules:
    file: ./prometheus/rules/swarm_task.rules.yml
  #  alert_rules:
  #    file: ./prometheus/rules/alert.rules
  prom_conf:
    file: ./prometheus/conf/prometheus.yml
  am_conf:
    file: ./alertmanager/conf/alertmanager.yml

services:

  cadvisor:
    image: google/cadvisor:v0.31.0
    networks:
    - webgateway
    command: -docker_only
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  grafana:
    image: {{.Grafana}}
    networks:
    - webgateway
    environment:
    - GF_SECURITY_ADMIN_USER={{.GrafanaUser}}
    - GF_SECURITY_ADMIN_PASSWORD={{.GrafanaPassword}}
    - GF_USERS_ALLOW_SIGN_UP=false
    - GF_SERVER_ROOT_URL=http{{if .ACMEEnabled}}s{{end}}://{{if .Domain}}{{.Domain}}{{else}}localhost{{end}}/grafana
    volumes:
    - grafana:/var/lib/grafana
    - ./grafana/datasources:/etc/grafana/datasources
    - ./grafana/dashboards:/etc/grafana/dashboards
    depends_on:
    - prometheus
    deploy:
      mode: replicated
      replicas: 1
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=PathPrefixStrip:/grafana
      - traefik.port=3000
      - traefik.docker.network=webgateway
      placement:
        constraints:
        - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  alertmanager:
    image: {{.Alertmanager}}
    networks:
    - webgateway
    command:
    - '--config.file=/etc/alertmanager/alertmanager.yml'
    - '--storage.path=/alertmanager'
    - '--web.external-url=http{{if .ACMEEnabled}}s{{end}}://{{if .Domain}}{{.Domain}}{{else}}localhost{{end}}/alertmanager'
    - '--web.route-prefix=/'
    volumes:
    - alertmanager:/alertmanager
    configs:
    - source: am_conf
      target: /etc/alertmanager/alertmanager.yml
    deploy:
      mode: replicated
      replicas: 1
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=PathPrefixStrip:/alertmanager
      - traefik.port=9093
      - traefik.docker.network=webgateway
      placement:
        constraints:
        - node.role == manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  node-exporter:
    image: {{.NodeExporter}}
    networks:
    - webgateway
    environment:
    - NODE_ID={{.NodeID}}
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
    - /etc/hostname:/etc/nodename
    command:
    - '--path.sysfs=/host/sys'
    - '--path.procfs=/host/proc'
    - '--collector.textfile.directory=/etc/node-exporter/'
    - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    # no collectors are explicitely enabled here, because the defaults are just fine,
    # see https://github.com/prometheus/node_exporter
    # disable ipvs collector because it barfs the node-exporter logs full with errors on my centos 7 vm's
    - '--no-collector.ipvs'
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  prometheus:
    image: {{.Prometheus}}
    networks:
    - webgateway
    command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--web.console.libraries=/etc/prometheus/console_libraries'
    - '--web.console.templates=/etc/prometheus/consoles'
    - '--storage.tsdb.path=/prometheus'
    - '--storage.tsdb.retention=24h'
    - '--web.external-url=http{{if .ACMEEnabled}}s{{end}}://{{if .Domain}}{{.Domain}}{{else}}localhost{{end}}/prometheus'
    - '--web.route-prefix=/'
    volumes:
    - prometheus:/prometheus
    configs:
    #    - source: alert_rules
    #      target: /etc/prometheus/alert.rules
    - source: node_rules
      target: /etc/prometheus/swarm_node.rules.yml
    - source: task_rules
      target: /etc/prometheus/swarm_task.rules.yml
    - source: prom_conf
      target: /etc/prometheus/prometheus.yml
    depends_on:
    - cadvisor
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
        - node.role == manager
      labels:
      - traefik.enable=true
      - traefik.frontend.rule=PathPrefixStrip:/prometheus
      - traefik.port=9090
      - traefik.docker.network=webgateway
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M

networks:
  webgateway:
    external: true